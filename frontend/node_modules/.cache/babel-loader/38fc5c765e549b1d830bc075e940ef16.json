{"ast":null,"code":"var _jsxFileName = \"/home/kirill/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/New GitHub/ExtrumsTest/Level5/frontend/src/components/AchivementsBlock.js\";\nimport React from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport ContentBlock from './ContentBlock.js';\nimport Title from './Title.js';\nimport Achievement from './Achivement.js';\nimport '../css/Achivements.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AchivementsBlock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      types: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('/api/get-types-ideas').then(res => res.json()).then(res => this.setState({\n      types: res.types\n    }));\n  }\n\n  render() {\n    let types = {};\n    let achivements = [];\n    let content;\n\n    if (this.state.types != null && this.props.ideas.length > 0) {\n      for (let i = 0; i < this.state.types.length; i++) {\n        types[this.state.types[i]] = 0;\n      }\n\n      for (let i = 0; i < this.props.ideas.length; i++) {\n        if (this.props.ideas[i].status === \"completed\") {\n          types[this.props.ideas[i].type] += 1;\n        }\n      }\n\n      for (const property in types) {\n        if (types[property] === 0) {\n          delete types[property];\n        } else {\n          achivements.push({\n            type: property,\n            count: types[property]\n          });\n        }\n      }\n\n      achivements = achivements.map((value, key) => /*#__PURE__*/_jsxDEV(Achievement, {\n        type: value.type,\n        count: value.count\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this));\n      content = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"achievements_list\",\n        children: /*#__PURE__*/_jsxDEV(Achievement, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n    } else {\n      content = /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          marginTop: \"4em\"\n        },\n        sx: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 74\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(ContentBlock, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        content: \"Achievements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"achivement_block\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AchivementsBlock;","map":{"version":3,"names":["React","CircularProgress","Box","ContentBlock","Title","Achievement","AchivementsBlock","Component","constructor","props","state","types","componentDidMount","fetch","then","res","json","setState","render","achivements","content","ideas","length","i","status","type","property","push","count","map","value","key","marginTop","display"],"sources":["/home/kirill/Документы/New GitHub/ExtrumsTest/Level5/frontend/src/components/AchivementsBlock.js"],"sourcesContent":["import React from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport ContentBlock from './ContentBlock.js';\nimport Title from './Title.js';\nimport Achievement from './Achivement.js';\nimport '../css/Achivements.css';\n\nclass AchivementsBlock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {types: null};\n  }\n\n  componentDidMount() {\n    fetch('/api/get-types-ideas')\n      .then(res => res.json())\n      .then(res => this.setState({types: res.types}));\n  }\n\n  render() {\n    let types = {};\n    let achivements = [];\n    let content;\n\n    if(this.state.types != null && this.props.ideas.length > 0) {\n\n      for(let i = 0; i < this.state.types.length; i++) {\n        types[this.state.types[i]] = 0;\n      }\n\n      for(let i = 0; i < this.props.ideas.length; i++) {\n        if(this.props.ideas[i].status===\"completed\") {\n          types[this.props.ideas[i].type] += 1;\n        }\n      }\n\n      for(const property in types) {\n        if(types[property] === 0) {\n          delete types[property];\n        } else {\n          achivements.push({type: property, count: types[property]});\n        }\n      }\n\n      achivements = achivements.map((value, key) => (\n        <Achievement key={key} type={value.type} count={value.count} />\n      ))\n\n      content = (\n        <div className=\"achievements_list\">\n          <Achievement />\n        </div>\n      );\n    } else {\n      content = <Box style={{marginTop: \"4em\"}} sx={{ display: 'flex' }}><CircularProgress /></Box>;\n    }\n\n    return (\n      <ContentBlock>\n        <Title content=\"Achievements\" />\n        <div className=\"achivement_block\">\n          {content}\n        </div>\n      </ContentBlock>\n    );\n  }\n}\n\nexport default AchivementsBlock;"],"mappings":"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"},"metadata":{},"sourceType":"module"}