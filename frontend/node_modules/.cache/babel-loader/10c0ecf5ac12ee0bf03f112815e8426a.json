{"ast":null,"code":"var _jsxFileName = \"/home/kirill/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/New GitHub/ExtrumsTest/Level5/frontend/src/App.js\";\nimport React from 'react';\nimport Header from './components/Header.js';\nimport ChooseBlock from './components/ChooseBlock.js';\nimport './css/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleReload = this.handleReload.bind(this);\n    this.handleUpdateElementActive = this.handleUpdateElementActive.bind(this);\n    this.state = {\n      to_do_list: []\n    };\n  }\n\n  componentDidMount() {\n    this.handleReload();\n  }\n\n  handleSave() {\n    fetch('/api/upload-data', {\n      method: \"POST\",\n      body: JSON.stringify(this.state),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    });\n  }\n\n  handleReload() {\n    fetch('/api/get-ideas').then(res => res.json()).then(res => this.setState({\n      to_do_list: res.ideas\n    }));\n  }\n\n  handleUpdateElementActive(e) {\n    e.status = \"active\";\n    this.state.to_do_list.push(e);\n    this.setState({\n      to_do_list: this.state.to_do_list\n    });\n  }\n\n  handleUpdateElementCompleted(e) {\n    let new_data = this.state.to_do_list;\n\n    for (let i = 0; i < new_data.length; i++) {\n      if (this.state.to_do_list[i]._id === e._id) {\n        new_data[i].status = \"completed\";\n      }\n    }\n\n    this.setState({\n      to_do_list: new_data\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onSave: this.handleSave,\n        onReload: this.handleReload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChooseBlock, {\n        onUpdateToDoList: this.handleUpdateElementActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Header","ChooseBlock","App","Component","constructor","props","handleSave","bind","handleReload","handleUpdateElementActive","state","to_do_list","componentDidMount","fetch","method","body","JSON","stringify","headers","then","res","json","setState","ideas","e","status","push","handleUpdateElementCompleted","new_data","i","length","_id","render"],"sources":["/home/kirill/Документы/New GitHub/ExtrumsTest/Level5/frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport Header from './components/Header.js';\nimport ChooseBlock from './components/ChooseBlock.js';\nimport './css/App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSave = this.handleSave.bind(this)\n    this.handleReload = this.handleReload.bind(this)\n    this.handleUpdateElementActive = this.handleUpdateElementActive.bind(this);\n    this.state = {\n      to_do_list: []\n    };\n  }\n\n  componentDidMount() {\n    this.handleReload();\n  }\n\n  handleSave() {\n    fetch('/api/upload-data', {\n      method: \"POST\",\n      body: JSON.stringify(this.state),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      }\n    })\n  }\n\n  handleReload() {\n    fetch('/api/get-ideas')\n      .then(res => res.json())\n      .then(res => this.setState({to_do_list: res.ideas}))\n  }\n\n  handleUpdateElementActive(e) {\n    e.status = \"active\";\n    this.state.to_do_list.push(e);\n    this.setState({to_do_list: this.state.to_do_list});\n  }\n\n  handleUpdateElementCompleted(e) {\n    let new_data = this.state.to_do_list;\n\n    for( let i = 0; i < new_data.length; i++ ) {\n      if( this.state.to_do_list[i]._id === e._id ) {\n        new_data[i].status=\"completed\";\n      }\n    }\n\n    this.setState({to_do_list: new_data});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header onSave={this.handleSave} onReload={this.handleReload} />\n        <ChooseBlock onUpdateToDoList={this.handleUpdateElementActive} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAO,eAAP;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;EAChCC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;IACA,KAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;IACA,KAAKE,yBAAL,GAAiC,KAAKA,yBAAL,CAA+BF,IAA/B,CAAoC,IAApC,CAAjC;IACA,KAAKG,KAAL,GAAa;MACXC,UAAU,EAAE;IADD,CAAb;EAGD;;EAEDC,iBAAiB,GAAG;IAClB,KAAKJ,YAAL;EACD;;EAEDF,UAAU,GAAG;IACXO,KAAK,CAAC,kBAAD,EAAqB;MACxBC,MAAM,EAAE,MADgB;MAExBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKP,KAApB,CAFkB;MAGxBQ,OAAO,EAAE;QACP,gBAAgB;MADT;IAHe,CAArB,CAAL;EAOD;;EAEDV,YAAY,GAAG;IACbK,KAAK,CAAC,gBAAD,CAAL,CACGM,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI,KAAKE,QAAL,CAAc;MAACX,UAAU,EAAES,GAAG,CAACG;IAAjB,CAAd,CAFf;EAGD;;EAEDd,yBAAyB,CAACe,CAAD,EAAI;IAC3BA,CAAC,CAACC,MAAF,GAAW,QAAX;IACA,KAAKf,KAAL,CAAWC,UAAX,CAAsBe,IAAtB,CAA2BF,CAA3B;IACA,KAAKF,QAAL,CAAc;MAACX,UAAU,EAAE,KAAKD,KAAL,CAAWC;IAAxB,CAAd;EACD;;EAEDgB,4BAA4B,CAACH,CAAD,EAAI;IAC9B,IAAII,QAAQ,GAAG,KAAKlB,KAAL,CAAWC,UAA1B;;IAEA,KAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACE,MAA7B,EAAqCD,CAAC,EAAtC,EAA2C;MACzC,IAAI,KAAKnB,KAAL,CAAWC,UAAX,CAAsBkB,CAAtB,EAAyBE,GAAzB,KAAiCP,CAAC,CAACO,GAAvC,EAA6C;QAC3CH,QAAQ,CAACC,CAAD,CAAR,CAAYJ,MAAZ,GAAmB,WAAnB;MACD;IACF;;IAED,KAAKH,QAAL,CAAc;MAACX,UAAU,EAAEiB;IAAb,CAAd;EACD;;EAEDI,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE,QAAC,MAAD;QAAQ,MAAM,EAAE,KAAK1B,UAArB;QAAiC,QAAQ,EAAE,KAAKE;MAAhD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,WAAD;QAAa,gBAAgB,EAAE,KAAKC;MAApC;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAMD;;AAxD+B;;AA2DlC,eAAeP,GAAf"},"metadata":{},"sourceType":"module"}